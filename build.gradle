plugins {
    id 'java'
    id "io.qameta.allure" version "2.8.1"
    id "io.freefair.lombok" version "4.1.5"
    id "org.gradle.test-retry" version "1.2.1"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

group 'rest-assured-sandbox'
version '0.0.1'

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

dependencies {
    implementation 'org.slf4j:slf4j-api:1.7.32'
    implementation 'io.rest-assured:rest-assured:4.4.0'
    implementation 'com.github.javafaker:javafaker:1.0.2'
    implementation 'org.assertj:assertj-core:3.20.2'
    implementation 'org.junit.jupiter:junit-jupiter-api:5.8.0'
    implementation 'org.junit.jupiter:junit-jupiter-engine:5.8.0'
    implementation 'org.junit.jupiter:junit-jupiter-params:5.8.0'
    implementation 'org.junit.platform:junit-platform-runner:1.8.0'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.12.5'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.5'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.12.5'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.12.5'
    implementation 'io.qameta.allure:allure-junit5:2.14.0'
    implementation 'io.qameta.allure:allure-rest-assured:2.14.0'
    implementation 'org.awaitility:awaitility:4.1.0'
    implementation 'org.aeonbits.owner:owner:1.0.12'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.0'
    testImplementation 'com.tngtech.archunit:archunit-junit5:0.21.0'
    testImplementation 'org.slf4j:slf4j-log4j12:1.7.32'
    implementation 'com.codeborne:selenide:5.24.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.0'
    implementation "io.qameta.allure:allure-selenide:2.14.0"
}

generateLombokConfig.enabled = false

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}

allure {
    version = '2.8.1'
    autoconfigure = true
    aspectjweaver = true
}
